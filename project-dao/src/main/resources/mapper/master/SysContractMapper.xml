<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.boot.dao.web.master.SysContractDao">
	<resultMap id="sysContract" type="com.spring.boot.bean.master.SysContract">
		<result column="contract_id" property="contractId" />
		<result column="contract_name" property="contractName" />
		<result column="contract_code" property="contractCode" />
		<result column="contract_money" property="contractMoney" />
		<result column="contract_startTime" property="contractStartTime" />
		<result column="contract_endTime" property="contractEndTime" />
		<result column="contract_type_id" property="contractTypeId" />
		<result column="first_party_company" property="firstPartyCompany" />
		<result column="second_party_company" property="secondPartyCompany" />
		<result column="person_liable_name" property="personLiableName" />
		<result column="create_time" property="createTime" />
		<result column="status_code" property="statusCode" />
		<result column="company_id" property="companyId" />

		<result column="company_name" property="companyName" />
		<result column="contractNumber" property="contractNumber" />
		<result column="contractWorking" property="contractWorking" />
		<result column="contractexpired" property="contractexpired" />
		<result column="total" property="total" />
		<result column="contractType_name" property="contractTypeName" />
		<result column="fileNum" property="fileNum" />
	</resultMap>

	<sql id="Base_Column_List">
		 contract.contract_id,contract.contract_name,contract.contract_code,contract.contract_money,contract.contract_startTime,contract.contract_endTime,contract.contract_type_id,
		 contract.first_party_company,contract.second_party_company,contract.person_liable_name,contract.status_code,contract.company_id,contract.status_code,contract.create_time,company.company_name,type.contractType_name
	</sql>
	<!--根据查询条件，查询合同列表数据-->
	<select id="sysContractDataList" resultMap="sysContract" >
		SELECT
		<include refid="Base_Column_List"/>
		,COUNT(file.file_id) as fileNum
		from sys_contract as contract LEFT JOIN sys_company as company on contract.company_id=company.company_id
		LEFT JOIN sys_contract_type as type on contract.contract_type_id=type.contractType_id
		LEFT JOIN sys_contract_file as file on file.contract_id=contract.contract_id
		where 1=1
		<if test="status_code != null and status_code!=''">
			/*status_code状态（1：未执行，2：在执行，3：即将过期，4：已经过期，5：已经删除）*/
			<choose>
				<when test="status_code==1">
					and contract.status_code=1
				</when>
				<when test="status_code==2">
					and contract.status_code=2
				</when>
				<when test="status_code==3">
					and contract.status_code=3
				</when>
				<when test="status_code==4">
					and contract.status_code=4
				</when>
				<when test="status_code==0">
					and contract.status_code!=5
				</when>
			</choose>
			/*and TO_DAYS( contract.contract_endTime )- TO_DAYS(NOW()) BETWEEN 0 and 30*/
		</if>
		<if test="companyId != 0">
			and contract.company_id=#{companyId}
		</if>
		<if test="contractStartTime != null and contractStartTime != null">
			and contract.contract_startTime <![CDATA[ >= ]]>#{contractStartTime}
		</if>
		<if test="contractEndTime != null and contractEndTime != null">
			and contract.contract_endTime <![CDATA[ <= ]]>#{contractEndTime}
		</if>
		<if test="contractTypeId != 0">
			and contract.contract_type_id=#{contractTypeId}
		</if>
		<if test="contractName != null and contractName != null">
			and contract.contract_name  like concat('%', #{contractName}, '%')
		</if>
		<if test="contractCode != null and contractCode != null">
			and contract.contract_code  like concat('%', #{contractCode}, '%')
		</if>
		<if test="firstPartyCompany != null and firstPartyCompany != null">
			and contract.first_party_company  like concat('%', #{firstPartyCompany}, '%')
		</if>
		<if test="secondPartyCompany != null and secondPartyCompany != null">
			and contract.second_party_company  like concat('%', #{secondPartyCompany}, '%')
		</if>

		GROUP BY contract.contract_id
		ORDER BY contract.create_time DESC
		<if test="offset != null and limit != null">
			limit #{offset},#{limit}
		</if>

	</select>
	<!--获取报表统计数据-->
	<select id="sysContractAnalysisData" resultMap="sysContract" parameterType="long">
		SELECT status_code,COUNT(contract_id) as total
		 from sys_contract as contract
		 where 1=1
		 and contract.status_code!=5
		<if test="companyId != 0">
			and contract.company_id=#{companyId}
		</if>
		GROUP BY contract.status_code
	</select>
	<!--查询即将到期合同列表数据（结束时间-当前时间<=31天）-->
	<!--<select id="sysContractExpireDataList" resultMap="sysContract" >
		SELECT
		<include refid="Base_Column_List"/>
		from sys_contract as contract LEFT JOIN sys_company as company on contract.company_id=company.company_id
		where 1=1
		and TO_DAYS( contract.contract_endTime )- TO_DAYS(NOW()) BETWEEN 0 and 30
		and status_code!=2
		<if test="companyId != 0">
			and contract.company_id=#{companyId}
		</if>
	</select>-->
	<!--查询即将到期合同列表总数量（结束时间-当前时间<=31天）-->
	<!--<select id="sysContractExpireDataTotal" resultType="int" >
		SELECT
		COUNT(contract_id)
		from sys_contract as contract
		where 1=1
		and TO_DAYS( contract.contract_endTime )- TO_DAYS(NOW()) BETWEEN 0 and 30
		and status_code!=2
		<if test="companyId != 0">
			and contract.company_id=#{companyId}
		</if>

	</select>-->
	<select id="sysContractDataTotal" resultType="int" >
		SELECT count(contract.contract_id)
		from sys_contract as contract
		where 1=1
		<if test="status_code != null and status_code!=''">
			/*status_code状态（1：未执行，2：在执行，3：即将过期，4：已经过期，5：已经删除）*/
			<choose>
				<when test="status_code==1">
					and contract.status_code=1
				</when>
				<when test="status_code==2">
					and contract.status_code=2
				</when>
				<when test="status_code==3">
					and contract.status_code=3
				</when>
				<when test="status_code==4">
					and contract.status_code=4
				</when>
				<when test="status_code==0">
					and contract.status_code!=5
				</when>
			</choose>
			/*and TO_DAYS( contract.contract_endTime )- TO_DAYS(NOW()) BETWEEN 0 and 30*/
		</if>
		<if test="companyId != 0">
			and contract.company_id=#{companyId}
		</if>
		<if test="contractStartTime != null and contractStartTime != null">
			and contract.contract_startTime <![CDATA[ >= ]]>#{contractStartTime}
		</if>
		<if test="contractEndTime != null and contractEndTime != null">
			and contract.contract_endTime <![CDATA[ <= ]]>#{contractEndTime}
		</if>
		<if test="contractTypeId != 0">
			and contract.contract_type_id=#{contractTypeId}
		</if>
		<if test="contractName != null and contractName != null">
			and contract.contract_name  like concat('%', #{contractName}, '%')
		</if>
		<if test="contractCode != null and contractCode != null">
			and contract.contract_code  like concat('%', #{contractCode}, '%')
		</if>
		<if test="firstPartyCompany != null and firstPartyCompany != null">
			and contract.first_party_company  like concat('%', #{firstPartyCompany}, '%')
		</if>
		<if test="secondPartyCompany != null and secondPartyCompany != null">
			and contract.second_party_company  like concat('%', #{secondPartyCompany}, '%')
		</if>

	</select>
	<select id="findSysContractByContractCode" resultMap="sysContract" >
		select *
		from sys_contract
		where contract_code = #{contractCode}
	</select>
	<update id="updateSysContract" parameterType="map">
		update sys_contract set contract_name = #{contractName},contract_code = #{contractCode},contract_money = #{contractMoney},contract_startTime = #{contractStartTime},
		contract_endTime = #{contractEndTime},contract_type_id = #{contractTypeId},first_party_company = #{firstPartyCompany},second_party_company = #{secondPartyCompany},
		person_liable_name = #{personLiableName}
		where contract_id = #{contractId}
	</update>
	<insert id="save" parameterType="map">
		INSERT INTO sys_contract  (contract_name, contract_code,contract_money,contract_startTime,contract_endTime,contract_type_id,first_party_company,second_party_company,person_liable_name,
		 create_time)
              VALUES   (#{contractName},#{contractCode},#{contractMoney},#{contractStartTime},#{contractEndTime},#{contractTypeId},#{firstPartyCompany},#{secondPartyCompany},#{personLiableName},#{createTime} )
	</insert>
	<update id="deleteSysContract" parameterType="map">
		update sys_contract  set status_code = 5
		where contract_id = #{contractId}
	</update>

</mapper>
